/*
 * Device List Api
 *
 * Ambulance Device List management for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: <your_email>
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package ambulance_wl

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type AmbulanceDeviceLogListAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // CreateDeviceLog - Saves new log into device log list
   CreateDeviceLog(ctx *gin.Context)

    // DeleteDeviceLog - Deletes specific device log
   DeleteDeviceLog(ctx *gin.Context)

    // GetDeviceLog - Provides details about device log
   GetDeviceLog(ctx *gin.Context)

    // GetDeviceLogs - Provides device logs list
   GetDeviceLogs(ctx *gin.Context)

    // UpdateDeviceLog - Updates specific device log
   UpdateDeviceLog(ctx *gin.Context)

}

// partial implementation of AmbulanceDeviceLogListAPI - all functions must be implemented in add on files
type implAmbulanceDeviceLogListAPI struct {

}

func newAmbulanceDeviceLogListAPI() AmbulanceDeviceLogListAPI {
  return &implAmbulanceDeviceLogListAPI{}
}

func (this *implAmbulanceDeviceLogListAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/device-list/entries/:entryId/logs", this.CreateDeviceLog)
  routerGroup.Handle( http.MethodDelete, "/device-list/entries/:entryId/logs/:logId", this.DeleteDeviceLog)
  routerGroup.Handle( http.MethodGet, "/device-list/entries/:entryId/logs/:logId", this.GetDeviceLog)
  routerGroup.Handle( http.MethodGet, "/device-list/entries/:entryId/logs", this.GetDeviceLogs)
  routerGroup.Handle( http.MethodPut, "/device-list/entries/:entryId/logs/:logId", this.UpdateDeviceLog)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateDeviceLog - Saves new log into device log list
// func (this *implAmbulanceDeviceLogListAPI) CreateDeviceLog(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeleteDeviceLog - Deletes specific device log
// func (this *implAmbulanceDeviceLogListAPI) DeleteDeviceLog(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetDeviceLog - Provides details about device log
// func (this *implAmbulanceDeviceLogListAPI) GetDeviceLog(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetDeviceLogs - Provides device logs list
// func (this *implAmbulanceDeviceLogListAPI) GetDeviceLogs(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // UpdateDeviceLog - Updates specific device log
// func (this *implAmbulanceDeviceLogListAPI) UpdateDeviceLog(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

